{"version":3,"sources":["axios.js","requests.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","backdrop_path","src","poster_path","alt","name","onClick","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdropPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b60d9ca.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","const API_KEY = \"413cbd3ab15fdc74e7ad8587cb8388bb\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  };\n  \n  export default requests;","import React, {useState, useEffect} from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport \"./Row.css\";\nimport Youtube from 'react-youtube';\n\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  // Options for react-youtube\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row_posters\">\n        {movies.map(\n          (movie) =>\n            movie.backdrop_path !== null && (\n              <img\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                src={`${baseImgUrl}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n                onClick={() => handleClick(movie)}\n              />\n            )\n        )}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nimport Youtube from \"react-youtube\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\n        backdropPosition: \"center center\",\n      }}\n    >\n      {/* Background image */}\n      <div className=\"banner_contents\">\n        {/* title */}\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n\n        {/* 2 buttons */}\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List </button>\n        </div>\n\n        {/* description */}\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 200)}</h1>\n      </div>\n      <div className=\"banner_fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner;","import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav_avatar\"\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n        alt=\"Avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      \n\n     <Banner />\n      \n\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}